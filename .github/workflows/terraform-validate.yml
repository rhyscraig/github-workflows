name: Terraform Validate

on:
  workflow_call:
    inputs:
      base_dir:
        type: string
        default: "."
      runs_on:
        type: string
        default: "ubuntu-latest"
      checkout_ref:
        type: string
        default: ""
      terraform_version:
        type: string
        default: ""
      tflint_version:
        type: string
        default: "latest"
      allow_to_fail:
        type: boolean
        default: false

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  SSH_KEY: ${{ secrets.GH_ACTIONS_SERVICE_USER_SSH_KEY }}
  AWS_DEFAULT_REGION: eu-west-2
  AWS_REGION: eu-west-2
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  tfvars_path: ./env/prd.tfvars

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  fmt:
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -diff -recursive
        working-directory: ${{ inputs.base_dir }}
        continue-on-error: ${{ inputs.allow_to_fail }}

  validate:
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Set up SSH private key
        run: |
          mkdir -p /home/runner/.ssh
          ssh-keyscan github.com >> /home/runner/.ssh/known_hosts
          echo "${{ env.SSH_KEY }}" > /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add /home/runner/.ssh/github_actions

      - name: Terraform Init
        run: terraform init -backend=false
        working-directory: ${{ inputs.base_dir }}

      - name: Terraform Validate
        run: |
          terraform init -backend=false
          terraform validate
        working-directory: ${{ inputs.base_dir }}
        continue-on-error: ${{ inputs.allow_to_fail }}

  tflint:
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          version: ${{ inputs.tflint_version }}

      - name: TFLint
        id: tflint
        run: |
          if [ -f "${GITHUB_WORKSPACE}/.tflint.hcl" ] && [ ! -f ".tflint.hcl" ]; then
            cp "${GITHUB_WORKSPACE}/.tflint.hcl" .tflint.hcl
          fi
          tflint --init
          if [ -f ".tflint.hcl" ]; then
            tflint -f compact --recursive --config "$(pwd)/.tflint.hcl"
          else
            tflint -f compact --recursive
          fi
        working-directory: ${{ inputs.base_dir }}

  checkov:
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.allow_to_fail }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          quiet: true
          output_format: cli,sarif
          output_file_path: console,checkov-results.json

      - name: Upload Checkov SARIF Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: checkov-results-${{ github.run_id }}
          path: checkov-results.json